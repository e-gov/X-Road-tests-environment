<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.7.3">
      <useBuildBlocker>false</useBuildBlocker>
      <blockLevel>GLOBAL</blockLevel>
      <scanQueueFor>DISABLED</scanQueueFor>
      <blockingJobs></blockingJobs>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.7.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>$SHARED_LIB_REPOSITORY</url>
        <credentialsId>b7a9b945-4430-4598-8d5d-ad6ed0941c5f</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>ls -la
cd server-config
ls -la
lxc file push $WORKSPACE/server-config/cs/softreset.sh xroad-lxd-cs/root/softreset.sh
lxc file push $WORKSPACE/server-config/cs/make_backup_cs.sh xroad-lxd-cs/root/make_backup_cs.sh
lxc file push $WORKSPACE/server-config/cs/restore_backup_cs.sh xroad-lxd-cs/root/restore_backup_cs.sh
lxc file push $WORKSPACE/server-config/ss/softreset.sh xroad-lxd-ss0/root/softreset.sh
lxc file push $WORKSPACE/server-config/ss/make_backup_ss.sh xroad-lxd-ss0/root/make_backup_ss.sh
lxc file push $WORKSPACE/server-config/ss/restore_backup_ss.sh xroad-lxd-ss0/root/restore_backup_ss.sh
lxc file push $WORKSPACE/server-config/ss/softreset.sh xroad-lxd-ss1/root/softreset.sh
lxc file push $WORKSPACE/server-config/ss/make_backup_ss.sh xroad-lxd-ss1/root/make_backup_ss.sh
lxc file push $WORKSPACE/server-config/ss/restore_backup_ss.sh xroad-lxd-ss1/root/restore_backup_ss.sh
lxc file push $WORKSPACE/server-config/ss/softreset.sh xroad-lxd-ss2/root/softreset.sh
lxc file push $WORKSPACE/server-config/ss/make_backup_ss.sh xroad-lxd-ss2/root/make_backup_ss.sh
lxc file push $WORKSPACE/server-config/ss/restore_backup_ss.sh xroad-lxd-ss2/root/restore_backup_ss.sh
lxc file push $WORKSPACE/server-config/cs/xroad-center xroad-lxd-cs/etc/cron.d/xroad-center
lxc exec xroad-lxd-cs -- sudo chown root:root /etc/cron.d/xroad-center
lxc exec xroad-lxd-cs -- sudo chmod 755 /etc/cron.d/xroad-center

lxc file push $WORKSPACE/server-config/xroad-autologin xroad-lxd-cs/etc/xroad/autologin
lxc file push $WORKSPACE/server-config/xroad-autologin xroad-lxd-ss0/etc/xroad/autologin
lxc file push $WORKSPACE/server-config/xroad-autologin xroad-lxd-ss1/etc/xroad/autologin
lxc file push $WORKSPACE/server-config/xroad-autologin xroad-lxd-ss2/etc/xroad/autologin
lxc exec xroad-lxd-cs -- sudo chown xroad:xroad /etc/xroad/autologin || true
lxc exec xroad-lxd-cs -- sudo apt-get -y install xroad-autologin || true
lxc exec xroad-lxd-ss0 -- sudo chown xroad:xroad /etc/xroad/autologin || true
lxc exec xroad-lxd-ss0 -- sudo apt-get -y install xroad-autologin || true
lxc exec xroad-lxd-ss1 -- sudo chown xroad:xroad /etc/xroad/autologin || true
lxc exec xroad-lxd-ss1 -- sudo apt-get -y install xroad-autologin || true
lxc exec xroad-lxd-ss2 -- sudo chown xroad:xroad /etc/xroad/autologin || true
lxc exec xroad-lxd-ss2 -- sudo apt-get -y install xroad-autologin || true


sudo mkdir /home/jenkins/certs || true

sudo lxc file pull xroad-lxd-ca/home/ca/CA/certs/ca.cert.pem /home/jenkins/certs/ca.cert.pem
sudo lxc file pull xroad-lxd-ca/home/ca/CA/certs/tsa.cert.pem /home/jenkins/certs/tsa.cert.pem
sudo lxc file pull xroad-lxd-ca/home/ca/CA/certs/ocsp.cert.pem /home/jenkins/certs/ocsp.cert.pem</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
